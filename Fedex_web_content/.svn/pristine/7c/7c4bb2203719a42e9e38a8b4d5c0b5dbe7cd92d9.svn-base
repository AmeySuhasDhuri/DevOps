<!DOCTYPE html>
<html>
<head>
 <link rel="stylesheet" type="text/css" href="css/CI.css">

<meta http-equiv="X-UA-Compatible" content="IE=edge"/>

</head>
<body>
<div class="flex-container">
  	<div class="name">
		
		
		<div class="c">
		<img class="img-responsive" src="images/fedex_freight.png" style="width:300px; height:50px;margin-top:30px;margin-left:10px;">
		<div class="freight">Freight CI/CD</div>
		</div>
   	</div>
<div class="flex-container2">

 <table style="width:80%" align="center">
<tr><td></td><td align="right"><a href="/Fedex_web_content/index.html" style="text-decoration: none;"><button  class="button" ><span>Home</span></button></a>
</td>

<!-- <td align="center"><a href="/Fedex_web_content" style="text-decoration: none;"><button  class="button1" ><span>Home</span></button></a>
--></td></tr>
<tr>
<td>
<h1 id="head">Continuous Testing</h1>

<p>Continuous Testing is the process of executing automated tests as part of the software delivery pipeline in order to obtain feedback on the business risks associated with a software release candidate as rapidly as possible. It evolves and extends test automation
 to address the increased complexity and pace of modern application development and delivery. </p>

<h2 id="head">Key Points</h2>
<ul>
<li>Continuous Testing’s primary goal is assessing business risk coverage</li>
<li>Continuous Testing provides instant insight on whether a release candidate is too risky to proceed through the delivery pipeline</li>
<li>Continuous Testing establishes a safety net that helps the team protect the user experience in accelerated development processes and avoid software failure headlines</li>
<li>Continuous Testing expects testing to be embedded within the development process, not tacked on at the end</li>
<li>Continuous Testing is seamlessly integrated into the software delivery pipeline and DevOps toolchain</li>
<li>Continuous Testing expects a stable test environment with valid test data to be available for each and every test run</li>
<li>Continuous Testing embraces everything from “shift left” (unit, component, coverage…) to “shift right” (monitoring/ APM, Testing in Production)</li>
<li>Continuous Testing involves executing the right set of tests at the right stage of the delivery pipeline—without creating a bottleneck</li>
<li>Continuous Testing delivers actionable feedback appropriate for each stage of the delivery pipeline</li>
<li>Continuous Testing evaluates each layer of a modern architecture at the appropriate stage of the delivery pipeline</li>
<li>Continuous Testing includes end-to-end tests that realistically assess the end-user experience across all associated technologies (front-end and back-end)</li>
<li>Continuous Testing’s tests must be broad enough to detect when an application change inadvertently impacts functionality that users have come to rely on</li>
<li>Continuous Testing reduces false positives by prioritizing robust, flexible modern test frameworks over brittle scripts</li>
<li>Continuous Testing involves continuously reviewing and optimizing the test suite to eliminate redundancy and maximize business risk coverage</li>



</ul>
<td></tr>
</table>
</div>
<div class="syntel"><center>Syntel FXF-DevOps-Automation</center></div>
</div>
</body>
</html>